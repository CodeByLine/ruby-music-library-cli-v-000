{"version":"3.4.4","examples":[{"description":"accepts a name for the song","full_description":"Song Basics #initialize with #name accepts a name for the song","status":"passed","file_path":"./spec/001_song_basics_spec.rb","line_number":5,"run_time":0.013032451,"pending_message":null},{"description":"sets the song name","full_description":"Song Basics #name= sets the song name","status":"passed","file_path":"./spec/001_song_basics_spec.rb","line_number":12,"run_time":0.000126195,"pending_message":null},{"description":"returns the class variable @@all","full_description":"Song Basics .all returns the class variable @@all","status":"passed","file_path":"./spec/001_song_basics_spec.rb","line_number":21,"run_time":0.001694025,"pending_message":null},{"description":"resets the @@all class variable to an empty array","full_description":"Song Basics .destroy_all resets the @@all class variable to an empty array","status":"passed","file_path":"./spec/001_song_basics_spec.rb","line_number":29,"run_time":0.000101552,"pending_message":null},{"description":"adds the song instance to the @@all class variable","full_description":"Song Basics #save adds the song instance to the @@all class variable","status":"passed","file_path":"./spec/001_song_basics_spec.rb","line_number":38,"run_time":0.033602375,"pending_message":null},{"description":"initializes and saves the song","full_description":"Song Basics .create initializes and saves the song","status":"passed","file_path":"./spec/001_song_basics_spec.rb","line_number":48,"run_time":0.000150546,"pending_message":null},{"description":"accepts a name for the song","full_description":"Artist Basics #initialize with #name accepts a name for the song","status":"passed","file_path":"./spec/002_artist_basics_spec.rb","line_number":5,"run_time":0.000128338,"pending_message":null},{"description":"sets the artist name","full_description":"Artist Basics #name= sets the artist name","status":"passed","file_path":"./spec/002_artist_basics_spec.rb","line_number":12,"run_time":9.411e-05,"pending_message":null},{"description":"returns the class variable @@all","full_description":"Artist Basics .all returns the class variable @@all","status":"passed","file_path":"./spec/002_artist_basics_spec.rb","line_number":21,"run_time":0.000155413,"pending_message":null},{"description":"resets the @@all class variable to an empty array","full_description":"Artist Basics .destroy_all resets the @@all class variable to an empty array","status":"passed","file_path":"./spec/002_artist_basics_spec.rb","line_number":29,"run_time":0.000148509,"pending_message":null},{"description":"adds the artist instance to the @@all class variable","full_description":"Artist Basics #save adds the artist instance to the @@all class variable","status":"passed","file_path":"./spec/002_artist_basics_spec.rb","line_number":38,"run_time":9.9353e-05,"pending_message":null},{"description":"initializes and saves the artist","full_description":"Artist Basics .create initializes and saves the artist","status":"passed","file_path":"./spec/002_artist_basics_spec.rb","line_number":48,"run_time":0.000124513,"pending_message":null},{"description":"accepts a name for the genre","full_description":"Genre Basics #initialize with #name accepts a name for the genre","status":"passed","file_path":"./spec/003_genre_basics_spec.rb","line_number":5,"run_time":0.000143392,"pending_message":null},{"description":"sets the genre name","full_description":"Genre Basics #name= sets the genre name","status":"passed","file_path":"./spec/003_genre_basics_spec.rb","line_number":12,"run_time":0.000142709,"pending_message":null},{"description":"returns the class variable @@all","full_description":"Genre Basics .all returns the class variable @@all","status":"passed","file_path":"./spec/003_genre_basics_spec.rb","line_number":21,"run_time":0.000132357,"pending_message":null},{"description":"resets the @@all class variable to an empty array","full_description":"Genre Basics .destroy_all resets the @@all class variable to an empty array","status":"passed","file_path":"./spec/003_genre_basics_spec.rb","line_number":29,"run_time":0.000150347,"pending_message":null},{"description":"adds the genre instance to the @@all class variable","full_description":"Genre Basics #save adds the genre instance to the @@all class variable","status":"passed","file_path":"./spec/003_genre_basics_spec.rb","line_number":38,"run_time":0.000169974,"pending_message":null},{"description":"initializes and saves the genre","full_description":"Genre Basics .create initializes and saves the genre","status":"passed","file_path":"./spec/003_genre_basics_spec.rb","line_number":48,"run_time":0.000152381,"pending_message":null},{"description":"initializes with a songs property set to an empty array","full_description":"Songs and Artists Artists have many songs initializes with a songs property set to an empty array","status":"passed","file_path":"./spec/004_songs_and_artists_spec.rb","line_number":5,"run_time":0.000114485,"pending_message":null},{"description":"can push a song into the songs collection","full_description":"Songs and Artists Artists have many songs can push a song into the songs collection","status":"passed","file_path":"./spec/004_songs_and_artists_spec.rb","line_number":11,"run_time":0.032785015,"pending_message":null},{"description":"accepts an artist for the song","full_description":"Songs and Artists Songs belong to an artist #artist= accepts an artist for the song","status":"passed","file_path":"./spec/004_songs_and_artists_spec.rb","line_number":22,"run_time":0.000155813,"pending_message":null},{"description":"adds the song to the artist's songs","full_description":"Songs and Artists Songs belong to an artist #artist= adds the song to the artist's songs","status":"passed","file_path":"./spec/004_songs_and_artists_spec.rb","line_number":32,"run_time":0.000182638,"pending_message":null},{"description":"adds the song to the artist's song collection","full_description":"Songs and Artists adding a song to an artist #add_song adds the song to the artist's song collection","status":"passed","file_path":"./spec/004_songs_and_artists_spec.rb","line_number":44,"run_time":0.000114495,"pending_message":null},{"description":"assigns the artist to the song","full_description":"Songs and Artists adding a song to an artist #add_song assigns the artist to the song","status":"passed","file_path":"./spec/004_songs_and_artists_spec.rb","line_number":51,"run_time":0.00014998,"pending_message":null},{"description":"does not assign the artist to the song if the song already has the artist","full_description":"Songs and Artists adding a song to an artist #add_song does not assign the artist to the song if the song already has the artist","status":"passed","file_path":"./spec/004_songs_and_artists_spec.rb","line_number":58,"run_time":0.089323489,"pending_message":null},{"description":"does not add the song to the artist's song collection if the artist already has the song","full_description":"Songs and Artists adding a song to an artist #add_song does not add the song to the artist's song collection if the artist already has the song","status":"passed","file_path":"./spec/004_songs_and_artists_spec.rb","line_number":69,"run_time":0.000176535,"pending_message":null},{"description":"uses add_song to add the song to the artist's collection","full_description":"Songs and Artists adding a song to an artist Song#artist= uses add_song to add the song to the artist's collection","status":"passed","file_path":"./spec/004_songs_and_artists_spec.rb","line_number":82,"run_time":0.000405428,"pending_message":null},{"description":"new songs accept an optional argument for the artist","full_description":"Songs and Artists initializing a song with an artist new songs accept an optional argument for the artist","status":"passed","file_path":"./spec/004_songs_and_artists_spec.rb","line_number":94,"run_time":0.000185051,"pending_message":null},{"description":"initializes with a songs property set to an empty array","full_description":"Songs and Genres Genres have many songs initializes with a songs property set to an empty array","status":"passed","file_path":"./spec/005_songs_and_genres_spec.rb","line_number":5,"run_time":0.000151392,"pending_message":null},{"description":"can push a song into the genre's song collection","full_description":"Songs and Genres Genres have many songs can push a song into the genre's song collection","status":"passed","file_path":"./spec/005_songs_and_genres_spec.rb","line_number":11,"run_time":0.000116588,"pending_message":null},{"description":"accepts an genre for the song","full_description":"Songs and Genres Songs belong to a genre #genre= accepts an genre for the song","status":"passed","file_path":"./spec/005_songs_and_genres_spec.rb","line_number":22,"run_time":1325.192989316,"pending_message":null}],"summary":{"duration":1325.478159588,"example_count":31,"failure_count":0,"pending_count":0},"summary_line":"31 examples, 0 failures"}